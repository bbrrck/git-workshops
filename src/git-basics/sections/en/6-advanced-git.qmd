# Advanced Git {#advanced-git}

## `.gitignore`
- specifies which files Git should ignore
- [.gitignore generator](https://www.toptal.com/developers/gitignore)

## `git <command> --help`

```zsh
# display help (documentation) for a given command -- e.g. git commit
git commit --help 
# or 
git commit -h
```


## `git diff`
```zsh
# show changes between two versions
git diff
git diff zoo.txt
git diff 235a0d8 5d94512 zoo.txt
git diff HEAD~1 HEAD zoo.txt
```


## `git cat-file -p`
```zsh
# show the contents of a Git object (commit, tree, blob)
git cat-file -p 235a0d8
```


## `git restore`
```zsh
# add a file to the staging area
git add zoo.txt
# remove a file from the staging area (unstage)
git restore --staged zoo.txt
```


## `git add --interactive`
```zsh
# interactively add changes
git add --interactive 
# or
git add -i
```

## `git log`
```zsh
# customize the output of git log
git log --all --oneline --graph --decorate
# or
git config --global alias.nicelog "log --all --graph --decorate --oneline"
git nicelog
```


## `git stash`
```zsh
# temporarily remove changes from the working directory
git stash
# restore removed changes
git stash pop
```


## `git blame`
```zsh
# show who made the last change in each line
git blame
```

## `git revert`
```zsh
# undo changes made in the last commit
git revert HEAD
```

::: {.myinfo}
The `git revert` command creates a new version, and does not modify the history of the repository.
:::

## `git reset`

```zsh
# return the repository to the state after the commit with commit_id
git reset --hard <commit_id>
```

::: {.warning}
The `git reset` command modifies the history of the repository and can cause file loss.
:::