# Časté otázky a problémy {#common-issues}


:::footer
[stackoverflow:git](https://stackoverflow.com/questions/tagged/git?tab=votes&pagesize=100&sort=MostVotes)
:::



## `git revert`
```zsh
git revert HEAD   # odstráň zmeny vykonané v poslednom commite
git revert HEAD~1 # odstráň zmeny vykonané v predposlednom commite
git revert d49de0 # odstráň zmeny vykonané v commite s hashom d49de0
```

::: {.myinfo}
Príkaz `git revert` vytvorí novú verziu, a nemení históriu repozitára. 
:::


## `git reset`

```zsh
# vráť repozitár do stavu *po* commite s hashom d49de0
git reset --hard d49de0
```

::: {.warning}
Príkaz `git reset` mení históriu repozitára a môže spôsobiť stratu súborov.
::: 

## `reset` vs `revert` vs `checkout`

| Príkaz         | Kontext | Použitie | 
|----------------|---------|----------|
| `git reset`	 | Commit  | Zahoď commity v súkromnej vetve alebo zahoď necommitnuté zmeny |
| `git reset`	 | Súbor   | Odstráň súbor z prípravnej zóny (z indexu) |
| `git checkout` | Commit  | Presun medzi vetvami alebo prezeranie starých verzií |
| `git checkout` | Súbor   | Zahoď zmeny v pracovnom adresári |
| `git revert`	 | Commit  | Vráť commity vo verejnej vetve |
| `git revert`	 | Súbor   | (N/A) |

: {tbl-colwidths="[23,10,67]"}

:::footer
[atlassian.com/git/tutorials/resetting-checking-out-and-reverting](https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting)
:::

## Ako vrátim späť lokálne zmeny?

```bash
git commit -m "Something terribly misguided"
git reset HEAD~1
# ... uprav súbory podľa potreby ...
git add .
git commit -c ORIG_HEAD # otvor predošlý popis v commit editore
git commit -C ORIG_HEAD # použi predošlý popis bez otvorenia commit editoru
```

:::footer
[stackoverflow:927386](https://stackoverflow.com/a/927386/1606707)
:::

## Ako vrátim späť zmeny ktoré už boli pushnuté?

```bash
git commit -m "Something terribly misguided"
git push origin main
git reset HEAD~1
# ... uprav súbory podľa potreby ...
git add .
git commit -C ORIG_HEAD # použi predošlý popis bez otvorenia commit editoru
git push origin main --force-with-lease # nepouživaj '--force'!
```

:::footer
[stackoverflow:22682870](https://stackoverflow.com/q/22682870/1606707)
:::

## Ako vrátim späť časť commitu?

```bash
git revert -n $bad_commit  # vráť commit späť, ale neukladaj zmeny
git reset HEAD .           # zruš pridanie zmien
git add --patch .          # pridaj požadované zmeny
git commit                 # vytvor commit z týchto zmien
git checkout -- .          # odstráň ostatné zmeny
```

::: {.fontsize-080}
**Pozn.**: Zmeny, ktoré pridávame pomocou príkazu `git add --patch`, sú zmeny, ktoré chceme vrátiť späť, nie zmeny, ktoré chceme ponechať.
:::

:::footer
[stackoverflow:4795600](https://stackoverflow.com/q/4795600/1606707)
:::

## Ako premenujem lokálnu vetvu?

```bash
# premenuj aktuálnu vetvu na 'newname'
git branch -m newname

# premenuj vetvu 'oldname' na 'newname'
git branch -m oldname newname
```

:::footer
[stackoverflow:6591213](https://stackoverflow.com/q/6591213/1606707)
:::

## Ako vymažem lokálnu aj vzdialenú vetvu?

```bash
git push -d <remote_name> <branch_name>
git branch -d <branch_name>
git fetch --all --prune # vymaž referencie na vymazané vzdialené vetvy
```

:::footer
[stackoverflow:2003505](https://stackoverflow.com/q/2003505/1606707)
:::

## Ako presuniem posledných n commitov na novú vetvu?

Presunutie posledných 3 commitov z `main` na novú vetvu `feature`:

```bash
git checkout main           # prepni sa na main
git branch feature          # vytvor novú vetvu feature ktorá ukazuje na rovnaký
                            # commit ako main, ale neprepinaj sa na ňu
git reset --hard HEAD~3     # vymaž posledné 3 commity
git checkout feature        # prepni sa na vetvu feature
```

:::footer
[stackoverflow:1628563](https://stackoverflow.com/q/1628563/1606707)
:::

## Ako odstránim súbory z prípravnej zóny?

```bash
git rm --cached <file>
```

## Ako zmením popis v už vytvorenom commite?

```bash
git commit --amend -m "New commit message"
```

. . .

::: {.warning}
Ak už bol starý commit pushnutý na remote, po použití `git commit --amend` je potrebné pushnúť cez `git push --force` alebo `--force-with-lease`.
:::

:::footer
[stackoverflow:179123](https://stackoverflow.com/q/179123/1606707)
:::

## Ako pridám súbory do už vytvoreného *commitu*?

```bash
git add zabudnuty_subor
git commit --amend --no-edit # znovu použi predošlý commit message
```

::: {.warning}
Ak už bol starý commit pushnutý na remote, po použití `git commit --amend` je potrebné pushnúť cez `git push --force` alebo `--force-with-lease`.
:::


:::footer
[stackoverflow:40503417](https://stackoverflow.com/q/40503417/1606707)
:::

## Ako môžem resetovať alebo vrátiť súbor na konkrétnu verziu?

```bash
git checkout c5f567 -- file1/to/restore file2/to/restore
```