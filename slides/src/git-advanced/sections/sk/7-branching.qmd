# Git workflow {#workflow}

V Gite existuje mnoho rôznych workflowov, ktoré sa líšia v tom, ako používajú vetvenie (branching). V tejto kapitole si ukážeme niekoľko najpoužívanejších workflow a ich výhody a nevýhody.

## Centralized workflow

![](https://wac-cdn.atlassian.com/dam/jcr:0869c664-5bc1-4bf2-bef0-12f3814b3187/01.svg?cdnVersion=1417)

Všetci vývojári pracujú na jednej vetve, napr. `main`.

<!-- How it works:

1. Initialize the central repository
2. Clone the central repository
3. Make changes and commit
4. Pull commits from the central repository
5. Resolve conflicts in the local copy
6. Push new commits to central repository -->

Ako to funguje:

1. Vytvor centrálny repozitár
2. Naklonuj centrálny repozitár
3. Urob zmeny a commitni ich
4. Stiahni commity z centrálného repozitára
5. Vyrieš konflikty v lokálnom repozitári
6. Pushni nové commity do centrálného repozitára

::: footer
[Atlassian: Centralized workflow](https://www.atlassian.com/git/tutorials/comparing-workflows)
:::

## Feature branching

- rozšírenie centralizovaného workflowu
- namiesto ukladania zmien priamo na `main` prebieha vývoj na samostatných `feature` vetvách

## Gitflow Workflow

- rozšírenie feature branching workflowu
- legacy workflow, 

![](https://nvie.com/img/git-model@2x.png)

::: footer
[*A successful Git branching model* by Vincent Driessen](https://nvie.com/posts/a-successful-git-branching-model/)

## Trunk-based development

- vývoj na hlavnej vetve